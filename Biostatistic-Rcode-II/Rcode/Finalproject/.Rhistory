model_glmm_bin <- glmer(ies_bin ~ followup + fam_age + fam_hispanic + fam_race + fam_female + death + (1|id), data = data, family = binomial)
# Extract and exponentiate coefficients for Binomial GLMM
fixed_effects_bin <- summary(model_glmm_bin)$coefficients
fixed_effects_bin_df <- as.data.frame(fixed_effects_bin) %>%
rownames_to_column(var = "term") %>%
mutate(odds_ratio = exp(Estimate)) %>%
select(term, odds_ratio, `Pr(>|z|)`)
# Display results for binary IES scores
fixed_effects_bin_df %>%
rename(p_value = `Pr(>|z|)`) %>%
knitr::kable(digits = 2, caption = "Exponentiated Coefficients (Odds Ratios) for GLMM - Binary IES Scores")
# Standardize the continuous variables
data <- data %>%
mutate(followup_scaled = scale(followup),
fam_age_scaled = scale(fam_age))
# Fit the GLMM for continuous IES scores with scaled covariates
model_glmm_cont <- glmer(IES ~ followup_scaled + fam_age_scaled + fam_hispanic + fam_race + fam_female + death + (1|id), data = data, family = poisson)
# Check for multicollinearity
lm_model <- lm(IES ~ followup + fam_age + fam_hispanic + fam_race + fam_female + death, data = data)
vif_values <- vif(lm_model)
install.packages("car")
library(car)
# Standardize the continuous variables
data <- data %>%
mutate(followup_scaled = scale(followup),
fam_age_scaled = scale(fam_age))
# Fit the GLMM for continuous IES scores with scaled covariates
model_glmm_cont <- glmer(IES ~ followup_scaled + fam_age_scaled + fam_hispanic + fam_race + fam_female + death + (1|id), data = data, family = poisson)
# Check for multicollinearity
lm_model <- lm(IES ~ followup + fam_age + fam_hispanic + fam_race + fam_female + death, data = data)
vif_values <- vif(lm_model)
# Display VIF values
vif_values
# Extract and exponentiate coefficients for Poisson GLMM
fixed_effects_cont <- summary(model_glmm_cont)$coefficients
fixed_effects_cont_df <- as.data.frame(fixed_effects_cont) %>%
rownames_to_column(var = "term") %>%
mutate(rate_ratio = exp(Estimate)) %>%
select(term, rate_ratio, `Pr(>|z|)`)
# Display results for continuous IES scores
fixed_effects_cont_df %>%
rename(p_value = `Pr(>|z|)`) %>%
knitr::kable(digits = 2, caption = "Exponentiated Coefficients (Rate Ratios) for GLMM - Continuous IES Scores")
summary(model_glmm_cont)
summary(model_glmm_cont)
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(readr)
library(geepack)
library(lmerTest)
library(tibble)
# Load the data
data <- read_csv("Final_Project_Data.csv")
# Part 0 : Data Exploration
age_summary <- summary(data$fam_age)
# Frequency counts for categorical variables
hispanic_summary <- table(data$fam_hispanic)
race_summary <- table(data$fam_race)
female_summary <- table(data$fam_female)
# Print summaries
print(age_summary)
print(hispanic_summary)
print(race_summary)
print(female_summary)
# Drop NA values for IES for plotting
data_filtered  <- na.omit(data[c("IES", "followup","fam_female")])
# Load necessary libraries
library(ggplot2)
# Plotting distribution of IES scores by follow-up time using separate plots for each time with fixed scales
p1 <- ggplot(data, aes(x = IES, fill = factor(followup))) +
geom_histogram(bins = 30, alpha = 0.6, position = "identity") +
scale_fill_brewer(palette = "Set1", name = "Follow-up Time (months)") +
labs(title = "IES Score Distribution by Follow-up Time",
x = "IES Score", y = "Frequency") +
theme_minimal() +
facet_wrap(~followup, scales = "fixed")  # Use fixed scales for consistent y-axis across facets
# Print the plot
print(p1)
average_IES <- data %>%
group_by(followup) %>%
summarise(mean_IES = mean(IES, na.rm = TRUE))
p2 <- ggplot(average_IES, aes(x = followup, y = mean_IES, group = 1)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(3, 6, 12)) +
labs(title = "Average IES Scores Over Time",
x = "Follow-up Time (months)",
y = "Average IES Score") +
theme_minimal()
# Print the plot
print(p2)
# Part 1 : Research Question 1
model_lmm <- lmer(IES ~ followup + (1|id), data = data)
summary(model_lmm)
model_gee <- geeglm(IES ~ followup, id = id, data = data, family = poisson, corstr = "exchangeable")
summary(model_gee)
model_glmm <- glmer(IES ~ followup + (1|id), data = data, family = poisson)
summary(model_glmm)
# Extract AIC and BIC for LMM and GLMM
aic_lmm <- AIC(model_lmm)
bic_lmm <- BIC(model_lmm)
aic_glmm <- AIC(model_glmm)
bic_glmm <- BIC(model_glmm)
# Display the results
data.frame(
Model = c("LMM", "GLMM"),
AIC = c(aic_lmm, aic_glmm),
BIC = c(bic_lmm, bic_glmm)
) %>%
knitr::kable(digits = 2, caption = "AIC and BIC for LMM and GLMM")
# Part 1 : Research Question 1
model_lmm <- lmer(IES ~ followup + (1|id), data = data)
summary(model_lmm)
model_gee <- geeglm(IES ~ followup, id = id, data = data, family = poisson, corstr = "exchangeable")
summary(model_gee)
model_glmm <- glmer(IES ~ followup + (1|id), data = data, family = poisson)
summary(model_glmm)
# Extract AIC and BIC for LMM and GLMM
aic_lmm <- AIC(model_lmm)
bic_lmm <- BIC(model_lmm)
aic_glmm <- AIC(model_glmm)
bic_glmm <- BIC(model_glmm)
# Display the results
data.frame(
Model = c("LMM", "GLMM"),
AIC = c(aic_lmm, aic_glmm),
BIC = c(bic_lmm, bic_glmm)
) %>%
knitr::kable(digits = 2, caption = "AIC and BIC for LMM and GLMM")
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(readr)
library(geepack)
library(lmerTest)
library(tibble)
# Load the data
data <- read_csv("Final_Project_Data.csv")
# Part 0 : Data Exploration
age_summary <- summary(data$fam_age)
# Part 0 : Data Exploration
age_summary <- summary(data$fam_age)
# Frequency counts for categorical variables
hispanic_summary <- table(data$fam_hispanic)
race_summary <- table(data$fam_race)
female_summary <- table(data$fam_female)
# Print summaries
print(age_summary)
print(hispanic_summary)
print(race_summary)
print(female_summary)
# Plotting distribution of IES scores by follow-up time using separate plots for each time with fixed scales
p1 <- ggplot(data, aes(x = IES, fill = factor(followup))) +
geom_histogram(bins = 30, alpha = 0.6, position = "identity") +
scale_fill_brewer(palette = "Set1", name = "Follow-up Time (months)") +
labs(title = "IES Score Distribution by Follow-up Time",
x = "IES Score", y = "Frequency") +
theme_minimal() +
facet_wrap(~followup, scales = "fixed")  # Use fixed scales for consistent y-axis across facets
# Print the plot
print(p1)
average_IES <- data %>%
group_by(followup) %>%
summarise(mean_IES = mean(IES, na.rm = TRUE))
p2 <- ggplot(average_IES, aes(x = followup, y = mean_IES, group = 1)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks = c(3, 6, 12)) +
labs(title = "Average IES Scores Over Time",
x = "Follow-up Time (months)",
y = "Average IES Score") +
theme_minimal()
# Print the plot
print(p2)
# Part 1 : Research Question 1
model_lmm <- lmer(IES ~ followup + (1|id), data = data)
summary(model_lmm)
model_gee <- geeglm(IES ~ followup, id = id, data = data, family = poisson, corstr = "exchangeable")
summary(model_gee)
model_glmm <- glmer(IES ~ followup + (1|id), data = data, family = poisson)
summary(model_glmm)
# Extract AIC and BIC for LMM and GLMM
aic_lmm <- AIC(model_lmm)
bic_lmm <- BIC(model_lmm)
aic_glmm <- AIC(model_glmm)
bic_glmm <- BIC(model_glmm)
# Display the results
data.frame(
Model = c("LMM", "GLMM"),
AIC = c(aic_lmm, aic_glmm),
BIC = c(bic_lmm, bic_glmm)
) %>%
knitr::kable(digits = 2, caption = "AIC and BIC for LMM and GLMM")
# Drop NA values for IES for plotting
data_filtered  <- na.omit(data[c("IES", "followup","fam_female")])
# Part 1 : Research Question 1
model_lmm <- lmer(IES ~ followup + (1|id), data = data_filtered)
data_filtered  <- na.omit(data[c("IES", "followup","fam_female")])
# Part 1 : Research Question 1
model_lmm <- lmer(IES ~ followup + (1|id), data = data_filtered)
data_filtered  <- na.omit(data)
# Part 1 : Research Question 1
model_lmm <- lmer(IES ~ followup + (1|id), data = data_filtered)
summary(model_lmm)
model_gee <- geeglm(IES ~ followup, id = id, data = data_filtered, family = poisson, corstr = "exchangeable")
summary(model_gee)
model_glmm <- glmer(IES ~ followup + (1|id), data = data_filtered, family = poisson)
summary(model_glmm)
# Extract AIC and BIC for LMM and GLMM
aic_lmm <- AIC(model_lmm)
bic_lmm <- BIC(model_lmm)
aic_glmm <- AIC(model_glmm)
bic_glmm <- BIC(model_glmm)
# Display the results
data.frame(
Model = c("LMM", "GLMM"),
AIC = c(aic_lmm, aic_glmm),
BIC = c(bic_lmm, bic_glmm)
) %>%
knitr::kable(digits = 2, caption = "AIC and BIC for LMM and GLMM")
model_glmm <- glmer(ies_bin ~ followup + (1|id), data = data, family = binomial)
summary(model_glmm)
model_glmm <- glmer(ies_bin ~ followup + (1|id), data = data, family = binomial)
summary(model_glmm)
model_glmm <- glmer(ies_bin ~ followup + (1|id), data = data, family = binomial)
summary(model_glmm)
model_glmm <- glmer(ies_bin ~ followup + (1|id), data = data, family = binomial)
summary(c)
# Fit the GLMM for continuous IES scores with covariates
model_glmm_cont <- glmer(IES ~ followup + fam_age + fam_hispanic + fam_race + fam_female + death + (1|id), data = data, family = poisson)
summary(model_glmm_cont)
# Extract and exponentiate coefficients
fixed_effects_cont <- summary(model_glmm_cont)$coefficients
fixed_effects_cont_df <- as.data.frame(fixed_effects_cont) %>%
rownames_to_column(var = "term") %>%
mutate(rate_ratio = exp(Estimate)) %>%
select(term, rate_ratio, `Pr(>|z|)`)
model_glmm <- glmer(ies_bin ~ followup + (1|id), data = data, family = binomial)
summary(c)
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(readr)
library(geepack)
library(lmerTest)
library(tibble)
model_glmm <- glmer(ies_bin ~ followup + (1|id), data = data, family = binomial)
summary(model_glmm)
# Extract and exponentiate coefficients
fixed_effects_cont <- summary(model_glmm)$coefficients
fixed_effects_cont_df <- as.data.frame(fixed_effects_cont) %>%
rownames_to_column(var = "term") %>%
mutate(rate_ratio = exp(Estimate)) %>%
select(term, rate_ratio, `Pr(>|z|)`)
# Display results
fixed_effects_cont_df %>%
rename(p_value = `Pr(>|z|)`) %>%
knitr::kable(digits = 2, caption = "Exponentiated Coefficients (Rate Ratios) for GLMM - Continuous IES Scores")
# Part 1 : Research Question 1
model_lmm <- lmer(IES ~ followup + (1|id), data = data)
summary(model_lmm)
model_gee <- geeglm(IES ~ followup, id = id, data = data, family = poisson, corstr = "exchangeable")
summary(model_gee)
model_glmm <- glmer(IES ~ followup + (1|id), data = data, family = poisson)
summary(model_glmm)
# Extract AIC and BIC for LMM and GLMM
aic_lmm <- AIC(model_lmm)
bic_lmm <- BIC(model_lmm)
aic_glmm <- AIC(model_glmm)
bic_glmm <- BIC(model_glmm)
# Display the results
data.frame(
Model = c("LMM", "GLMM"),
AIC = c(aic_lmm, aic_glmm),
BIC = c(bic_lmm, bic_glmm)
) %>%
knitr::kable(digits = 2, caption = "AIC and BIC for LMM and GLMM")
model_gee <- geeglm(IES ~ followup, id = id, data = data, family = Gaussian, corstr = "exchangeable")
model_gee <- geeglm(IES ~ followup, id = id, data = data, corstr = "exchangeable")
summary(model_gee)
# Part 1 : Research Question 1
model_lmm <- lmer(IES ~ followup + (1|id), data = data)
summary(model_lmm)
model_gee <- geeglm(IES ~ followup, id = id, data = data, corstr = "exchangeable")
summary(model_gee)
model_glmm <- glmer(IES ~ followup + (1|id), data = data)
summary(model_glmm)
# Extract AIC and BIC for LMM and GLMM
aic_lmm <- AIC(model_lmm)
bic_lmm <- BIC(model_lmm)
aic_glmm <- AIC(model_glmm)
bic_glmm <- BIC(model_glmm)
# Display the results
data.frame(
Model = c("LMM", "GLMM"),
AIC = c(aic_lmm, aic_glmm),
BIC = c(bic_lmm, bic_glmm)
) %>%
knitr::kable(digits = 2, caption = "AIC and BIC for LMM and GLMM")
summary(model_glmm)
summary(model_lmm)
model_gee1 <- geeglm(IES ~ followup, id = id, data = data, corstr = "exchangeable")
summary(model_gee1)
model_gee2 <- geeglm(IES ~ followup, id = id, data = data, corstr = "Independent")
model_gee2 <- geeglm(IES ~ followup, id = id, data = data, corstr = "independent")
model_gee2 <- geeglm(IES ~ followup, id = id, data = data, corstr = "independence")
summary(model_gee2)
model_gee1 <- geeglm(IES ~ followup, id = id, data = data, corstr = "exchangeable")
summary(model_gee1)
model_gee2 <- geeglm(IES ~ followup, id = id, data = data, corstr = "independence")
summary(model_gee2)
install.packages("MuMIn")
library(MuMIn)
# Calculate QIC for the models
qic_model_gee1 <- QIC(model_gee1)
qic_model_gee2 <- QIC(model_gee2)
qic_model_gee1
qic_model_gee2
model_gee1 <- geeglm(IES ~ followup, id = id, data = data, corstr = "exchangeable")
summary(model_gee1)
model_gee2 <- geeglm(IES ~ followup, id = id, data = data, corstr = "independence")
summary(model_gee2)
model_glmm <- glmer(IES ~ followup + (1|id), data = data, family = Gamma(link="log"))
model_glmm <- glmer(IES ~ followup + (1|id), data = data, family = gaussian)
model_glmm <- glmer(IES ~ followup + (1|id), data = data, family = possion)
model_gee1 <- geeglm(IES ~ followup, id = id, data = data, corstr = "exchangeable")
summary(model_gee1)
# Part 1 : Research Question 1
model_lmm <- lmer(IES ~ followup + (1|id), data = data)
summary(model_lmm)
model_gee1 <- geeglm(IES ~ followup, id = id, data = data, corstr = "exchangeable")
summary(model_gee1)
model_gee2 <- geeglm(IES ~ followup, id = id, data = data, corstr = "independence")
summary(model_gee2)
model_gee2 <- geeglm(IES ~ followup, id = id, data = data, corstr = "independence")
summary(model_gee2)
model_glmm <- glmer(IES ~ followup + (1|id), data = data, family = gaussian)
summary(model_glmm)
# Part 1 : Research Question 1
model_lmm <- lmer(IES ~ followup + (1|id), data = data)
summary(model_lmm)
model_glmm_b <- glmer(ies_bin ~ followup + (1|id), data = data, family = binomial)
summary(model_glmm_b)
# Extract and exponentiate coefficients
fixed_effects_cont <- summary(model_glmm)$coefficients
fixed_effects_cont_df <- as.data.frame(fixed_effects_cont) %>%
rownames_to_column(var = "term") %>%
mutate(rate_ratio = exp(Estimate)) %>%
select(term, rate_ratio, `Pr(>|z|)`)
model_glmm_b <- glmer(ies_bin ~ followup + (1|id), data = data, family = binomial)
summary(model_glmm_b)
# Extract and exponentiate coefficients
fixed_effects_cont <- summary(model_glmm_b)$coefficients
fixed_effects_cont_df <- as.data.frame(fixed_effects_cont) %>%
rownames_to_column(var = "term") %>%
mutate(rate_ratio = exp(Estimate)) %>%
select(term, rate_ratio, `Pr(>|z|)`)
# Display results
fixed_effects_cont_df %>%
rename(p_value = `Pr(>|z|)`) %>%
knitr::kable(digits = 2, caption = "Exponentiated Coefficients (Rate Ratios) for GLMM - binary IES Scores")
model_glmm_b <- glmer(ies_bin ~ followup + (1|id), data = data, family = binomial)
summary(model_glmm_b)
# Extract and exponentiate coefficients
fixed_effects_cont <- summary(model_glmm_b)$coefficients
fixed_effects_cont_df <- as.data.frame(fixed_effects_cont) %>%
rownames_to_column(var = "term") %>%
mutate(rate_ratio = exp(Estimate)) %>%
select(term, rate_ratio, `Pr(>|z|)`)
# Display results
fixed_effects_cont_df %>%
rename(p_value = `Pr(>|z|)`) %>%
knitr::kable(digits = 2, caption = "Exponentiated Coefficients (Rate Ratios) for GLMM - binary IES Scores")
# Fit the GLMM for continuous IES scores with covariates
model_glmm_cont <- glmer(IES ~ followup + fam_age + fam_hispanic + fam_race + fam_female + death + (1|id), data = data, family = gaussian)
summary(model_glmm_cont)
library(lmerTest)
# Fit the GLMM for continuous IES scores with covariates
model_glmm_cont <- glmer(IES ~ followup + fam_age + fam_hispanic + fam_race + fam_female + death + (1|id), data = data, family = gaussian)
summary(model_glmm_cont)
# Fit the GLMM for continuous IES scores with covariates
model_glmm_cont <- glmer(IES ~ followup + fam_age + fam_hispanic + fam_race + fam_female + death + (1|id), data = data, family = gaussian)
summary(model_glmm_cont)
model_lmer_cont <- glmer(IES ~ followup + fam_age + fam_hispanic + fam_race + fam_female + death + (1|id), data = data, family = gaussian)
model_lmer_cont <- glmer(IES ~ followup + fam_age + fam_hispanic + fam_race + fam_female + death + (1|id), data = data)
model_lmer_cont <- lmer(IES ~ followup + fam_age + fam_hispanic + fam_race + fam_female + death + (1|id), data = data)
summary(model_lmer_cont)
# Fit the GLMM for continuous IES scores with covariates
model_glmm_cont <- glmer(IES ~ followup + fam_age + fam_hispanic + fam_race + fam_female + death + (1|id), data = data, family = gaussian)
summary(model_glmm_cont)
model_lmer_cont <- lmer(IES ~ followup + fam_age + fam_hispanic + fam_race + fam_female + death + (1|id), data = data)
summary(model_lmer_cont)
model_glmm_bin <- glmer(ies_bin ~ followup + fam_age + fam_hispanic + fam_race + fam_female + death + (1|id), data = data, family = binomial)
# Extract and exponentiate coefficients for Binomial GLMM
fixed_effects_bin <- summary(model_glmm_bin)$coefficients
fixed_effects_bin_df <- as.data.frame(fixed_effects_bin) %>%
rownames_to_column(var = "term") %>%
mutate(odds_ratio = exp(Estimate)) %>%
select(term, odds_ratio, `Pr(>|z|)`)
# Display results for binary IES scores
fixed_effects_bin_df %>%
rename(p_value = `Pr(>|z|)`) %>%
knitr::kable(digits = 2, caption = "Exponentiated Coefficients (Odds Ratios) for GLMM - Binary IES Scores")
# Fit the GLMM for binary IES scores with covariates
model_glmm_bin <- glmer(ies_bin ~ followup + fam_age + fam_hispanic + fam_race + fam_female + death + (1|id), data = data, family = binomial)
summary(model_glmm_bin)
# Extract and exponentiate coefficients for Binomial GLMM
fixed_effects_bin <- summary(model_glmm_bin)$coefficients
fixed_effects_bin_df <- as.data.frame(fixed_effects_bin) %>%
rownames_to_column(var = "term") %>%
mutate(odds_ratio = exp(Estimate)) %>%
select(term, odds_ratio, `Pr(>|z|)`)
# Display results for binary IES scores
fixed_effects_bin_df %>%
rename(p_value = `Pr(>|z|)`) %>%
knitr::kable(digits = 2, caption = "Exponentiated Coefficients (Odds Ratios) for GLMM - Binary IES Scores")
exp(-1.1625 )
model_lmer_cont <- lmer(IES ~ followup + fam_age + fam_hispanic + fam_race + fam_female + death + (1|id), data = data)
summary(model_lmer_cont)
model_glmm_c <- glmer(IES ~ followup + (1|id), data = data, family = gaussian)
summary(model_glmm_c)
model_glmm_b <- glmer(ies_bin ~ followup + (1|id), data = data, family = binomial)
summary(model_glmm_b)
# Extract and exponentiate coefficients
fixed_effects_cont <- summary(model_glmm_b)$coefficients
fixed_effects_cont_df <- as.data.frame(fixed_effects_cont) %>%
rownames_to_column(var = "term") %>%
mutate(rate_ratio = exp(Estimate)) %>%
select(term, rate_ratio, `Pr(>|z|)`)
# Display results
fixed_effects_cont_df %>%
rename(p_value = `Pr(>|z|)`) %>%
knitr::kable(digits = 2, caption = "Exponentiated Coefficients (Rate Ratios) for GLMM - binary IES Scores")
# Fit the GLMM for continuous IES scores with covariates
model_glmm_cont <- glmer(IES ~ followup + fam_age + fam_hispanic + fam_race + fam_female + death + (1|id), data = data, family = gaussian)
summary(model_glmm_cont)
# Fit the GLMM for continuous IES scores with covariates
model_glmm_cont <- glmer(IES ~ followup + fam_age + fam_hispanic + fam_race + fam_female + death + (1|id), data = data, family = gaussian)
summary(model_glmm_cont)
# Fit the GLMM for continuous IES scores with covariates
model_glmm_cont <- glmer(IES ~ followup + fam_age + fam_hispanic + fam_race + fam_female + death + (1|id), data = data, family = gaussian)
summary(model_glmm_cont)
model_lmer_cont <- lmer(IES ~ followup + fam_age + fam_hispanic + fam_race + fam_female + death + (1|id), data = data)
summary(model_lmer_cont)
model_lmer_cont <- lmer(IES ~ followup + fam_age + fam_hispanic + fam_race + fam_female + death + (1|id), data = data)
summary(model_lmer_cont)
# Fit the GLMM for binary IES scores with covariates
model_glmm_bin <- glmer(ies_bin ~ followup + fam_age + fam_hispanic + fam_race + fam_female + death + (1|id), data = data, family = binomial)
summary(model_glmm_bin)
# Extract and exponentiate coefficients for Binomial GLMM
fixed_effects_bin <- summary(model_glmm_bin)$coefficients
fixed_effects_bin_df <- as.data.frame(fixed_effects_bin) %>%
rownames_to_column(var = "term") %>%
mutate(odds_ratio = exp(Estimate)) %>%
select(term, odds_ratio, `Pr(>|z|)`)
# Display results for binary IES scores
fixed_effects_bin_df %>%
rename(p_value = `Pr(>|z|)`) %>%
knitr::kable(digits = 2, caption = "Exponentiated Coefficients (Odds Ratios) for GLMM - Binary IES Scores")
# Load necessary libraries
library(ggplot2)
# Plotting distribution of IES scores by follow-up time using separate plots for each time with fixed scales
p1 <- ggplot(data, aes(x = IES, fill = factor(followup))) +
geom_histogram(bins = 30, alpha = 0.6, position = "identity") +
scale_fill_brewer(palette = "Set1", name = "Follow-up Time (months)") +
labs(title = "IES Score Distribution by Follow-up Time",
x = "IES Score", y = "Frequency") +
theme_minimal() +
facet_wrap(~followup, scales = "fixed")  # Use fixed scales for consistent y-axis across facets
# Print the plot
print(p1)
model_glmm_c <- glmer(IES ~ followup + (1|id), data = data, family = gaussian)
summary(model_glmm_c)
# Part 1 : Research Question 1
model_lmm <- lmer(IES ~ followup + (1|id), data = data)
summary(model_lmm)
model_gee1 <- geeglm(IES ~ followup, id = id, data = data, corstr = "exchangeable")
summary(model_gee1)
model_gee2 <- geeglm(IES ~ followup, id = id, data = data, corstr = "independence")
summary(model_gee2)
model_glmm_b <- glmer(ies_bin ~ followup + (1|id), data = data, family = binomial)
summary(model_glmm_b)
# Extract and exponentiate coefficients
fixed_effects_cont <- summary(model_glmm_b)$coefficients
fixed_effects_cont_df <- as.data.frame(fixed_effects_cont) %>%
rownames_to_column(var = "term") %>%
mutate(rate_ratio = exp(Estimate)) %>%
select(term, rate_ratio, `Pr(>|z|)`)
# Display results
fixed_effects_cont_df %>%
rename(p_value = `Pr(>|z|)`) %>%
knitr::kable(digits = 2, caption = "Exponentiated Coefficients (Rate Ratios) for GLMM - binary IES Scores")
# Part 2 : Research Question 2
# Fit the GLMM for continuous IES scores with covariates
model_glmm_cont <- glmer(IES ~ followup + fam_age + fam_hispanic + fam_race + fam_female + death + (1|id), data = data, family = gaussian)
summary(model_glmm_cont)
model_lmer_cont <- lmer(IES ~ followup + fam_age + fam_hispanic + fam_race + fam_female + death + (1|id), data = data)
summary(model_lmer_cont)
# Fit the GLMM for binary IES scores with covariates
model_glmm_bin <- glmer(ies_bin ~ followup + fam_age + fam_hispanic + fam_race + fam_female + death + (1|id), data = data, family = binomial)
summary(model_glmm_bin)
# Extract and exponentiate coefficients for Binomial GLMM
fixed_effects_bin <- summary(model_glmm_bin)$coefficients
fixed_effects_bin_df <- as.data.frame(fixed_effects_bin) %>%
rownames_to_column(var = "term") %>%
mutate(odds_ratio = exp(Estimate)) %>%
select(term, odds_ratio, `Pr(>|z|)`)
# Display results for binary IES scores
fixed_effects_bin_df %>%
rename(p_value = `Pr(>|z|)`) %>%
knitr::kable(digits = 2, caption = "Exponentiated Coefficients (Odds Ratios) for GLMM - Binary IES Scores")
