dd
effect_size <- 0.5
sd <- 3/2
size <- 30
b <-sqrt(size)
b
a5 <- effect_size/(sd/sqrt(size)) - 1.96
a5
dd <- pnorm(a5)
dd
effect_size <- 1
sd <- 3/2
size <- 30
b <-sqrt(size)
b
a5 <- effect_size/(sd/sqrt(size)) - 1.96
a5
dd <- pnorm(a5)
dd
size <- 30
b <-sqrt(size)
b
effect_size <- 1
sd <- 1.5
size <- 30
a5 <- effect_size/(sd/sqrt(size)) - 1.96
a5
dd <- pnorm(a5)
dd
effect_size <- 2
sd <- 1.5
size <- 30
a5 <- effect_size/(sd/sqrt(size)) - 1.96
a5
dd <- pnorm(a5)
dd
effect_size <- 0.5
sd <- 1.5
size <- 30
a5 <- effect_size/(sd/sqrt(size)) - 1.96
a5
dd <- pnorm(a5)
dd
effect_size <- 1.5
sd <- 1.5
size <- 30
a5 <- effect_size/(sd/sqrt(size)) - 1.96
a5
dd <- pnorm(a5)
dd
effect_size <- 0.5
sd <- 1.5
size <- 30
a5 <- effect_size/(sd/sqrt(size)) - 1.96
a5
dd <- pnorm(a5)
dd
effect_size <- 1.5
sd <- 1.5
size <- 30
a5 <- effect_size/(sd/sqrt(size)) - 1.96
a5
dd <- pnorm(a5)
dd
effect_size <- 1
sd <- 1.5
size <- 30
a5 <- effect_size/(sd/sqrt(size)) - 1.96
a5
dd <- pnorm(a5)
dd
effect_size <- 2
sd <- 1.5
size <- 30
a5 <- effect_size/(sd/sqrt(size)) - 1.96
a5
dd <- pnorm(a5)
dd
effect_size <- 0.5
sd <- 1.5
size <- 30
a5 <- effect_size/(sd/sqrt(size)) - 1.96
a5
dd <- pnorm(a5)
dd
effect_size <- 1
sd <- 1.5
size <- 30
a5 <- effect_size/(sd/sqrt(size)) - 1.96
a5
dd <- pnorm(a5)
dd
exp(-0.99296 + 0.13997)
exp(0.9131033)
exp(0.7870)
data$age.group <- as.factor(data$age.group)
data <- read.csv("/Users/kaiyangqian/Documents/Courses/Biostatistic Method II/Rcode/HW6/skincancer-3.csv")
data$Dallas <- ifelse(data$city == "Dallas", 1, 0)
model <- glm(cases ~ Dallas + offset(log(py1000)), family = poisson, data = data)
summary(model)
confint(model)
library(tidyverse)
tidy_output <- broom::tidy(model, exponentiate = TRUE, conf.int = TRUE, conf.level = 0.95)
print(tidy_output)
data$age.group <- as.factor(data$age.group)
data$age.group <- as.factor(data$age.group)
model_age_adjusted <- glm(cases ~ Dallas + age.group + offset(log(py1000)),
family = poisson, data = data)
summary(model_age_adjusted)
tidy_model_age_adjusted <- broom::tidy(model_age_adjusted, exponentiate = TRUE, conf.int = TRUE)
print(tidy_model_age_adjusted)
#2a
data$age.group <- as.factor(data$age.group)
model_age_adjusted <- glm(cases ~ Dallas + age.group + offset(log(py1000)),
family = poisson, data = data)
summary(model_age_adjusted)
tidy_model_age_adjusted <- broom::tidy(model_age_adjusted, exponentiate = TRUE, conf.int = TRUE)
print(tidy_model_age_adjusted)
print(tidy_output)
# Set working path
getwd()
setwd("/Users/kaiyangqian/Documents/Courses/Biostatistic Method II/Rcode/HW7")
#write.csv(data, "exercise_therapy.csv", row.names = FALSE)
library(foreign)
data <- read.dta("/Users/kaiyangqian/Documents/Courses/Biostatistic Method II/Rcode/HW7/exercise_therapy.dta")
#1a
# Spaghetti plot for Treatment 1
ggplot(data[data$trt == 1, ], aes(x = time, y = y, group = id, color = as.factor(id))) +
geom_line() +
geom_point() +
labs(title = "Treatment 1: Increased Repetitions", x = "Time (days)", y = "Strength") +
theme_minimal() +
scale_color_viridis_d(name = "Subject ID")
data <- read.dta("/Users/kaiyangqian/Documents/Courses/Biostatistic Method II/Rcode/HW7/exercise_therapy.dta")
model <- lmer(y ~ time * trt + (1 | id), data = data)
library(lme4)
if(!require(lme4)) install.packages("lme4")
library(lme4)
model <- lmer(y ~ time * trt + (1 | id), data = data)
summary(model)
# Fit the model with a random slope for time
model_random_slope <- lmer(y ~ time + trt + (time | id), data = data)
# Display the summary of the model
summary(model_random_slope)
model2 <- lmer(y ~ time + trt + (time | id), data = data)
summary(model2)
library(lmerTest)
if(!require(lmerTest)) install.packages("lmerTest")
library(lmerTest)
model2 <- lmer(y ~ time + trt + (time | id), data = data)
summary(model2)
#2c
if(!require(lme4)) install.packages("lme4")
library(lme4)
model <- lmer(y ~ time * trt + (1 | id), data = data)
summary(model)
#2c
if(!require(lme4)) install.packages("lme4")
library(lme4)
model <- lmer(y ~ (1 | id) + trt + time + time * trt, data = data)
summary(model)
#2c
if(!require(lme4)) install.packages("lme4")
library(lme4)
model <- lmer(y ~ (1 | id) + trt + time + time * trt, data = data)
summary(model)
library(lmerTest)
model <- lmer(y ~ (1 | id) + trt + time + time * trt, data = data)
summary(model)
data = data %>%
mutate(trt = factor(trt, levels = 1:2, labels = c("increased_reps", "increased_weight")))
model <- lmer(y ~ (1 | id) + trt + time + time * trt, data = data)
#summary(model)
as_tibble(summary(model)$coefficients, rownames = "term") %>%
kable(digits = 2)
library(lme4)
library(dplyr)
model <- lmer(y ~ (1 | id) + trt + time + time * trt, data = data)
#summary(model)
as_tibble(summary(model)$coefficients, rownames = "term") %>%
kable(digits = 2)
if(!require(lme4)) install.packages("lme4")
library(lme4)
library(dplyr)
library(knitr)
model <- lmer(y ~ (1 | id) + trt + time + time * trt, data = data)
#summary(model)
as_tibble(summary(model)$coefficients, rownames = "term") %>%
kable(digits = 2)
# convert treatment variable from numeric to factor
strength = strength %>%
mutate(trt = factor(trt, levels = 1:2, labels = c("increased_reps", "increased_weight")))
# convert treatment variable from numeric to factor
data = data %>%
mutate(trt = factor(trt, levels = 1:2, labels = c("increased_reps", "increased_weight")))
# convert treatment variable from numeric to factor
data = data %>%
mutate(trt = factor(trt, levels = 1:2, labels = c("increased_reps", "increased_weight")))
model <- lmer(y ~ (1 | id) + trt + time + time * trt, data = data)
# convert treatment variable from numeric to factor
data = data %>%
mutate(trt = factor(trt, levels = 1:2, labels = c("increased_reps", "increased_weight")))
model <- lmer(y ~ (1 | id) + trt + time + time * trt, data = data)
getwd()
setwd("/Users/kaiyangqian/Documents/Courses/Biostatistic Method II/Rcode/HW7")
strength = read_dta("exercise_therapy.dta")
install.packages("haven")
library(haven)
strength = read_dta("exercise_therapy.dta")
# convert treatment variable from numeric to factor
strength = strength %>%
mutate(trt = factor(trt, levels = 1:2, labels = c("increased_reps", "increased_weight")))
mod_randint = lmer(y ~ (1 | id) + trt + time + trt*time, data = strength)
as_tibble(summary(mod_randint)$coefficients, rownames = "term") %>%
kable(digits = 2)
re_variance = as_tibble(summary(mod_randint)$varcor) %>%
rename("variance" = vcov,
"sd" = sdcor,
group = grp,
Name = var1) %>%
select(-var2)
re_variance %>%
kable(digits = 3)
#2c
library(lme4)
library(dplyr)
library(knitr)
library(haven)
strength = read_dta("exercise_therapy.dta")
# convert treatment variable from numeric to factor
strength = strength %>%
mutate(trt = factor(trt, levels = 1:2, labels = c("increased_reps", "increased_weight")))
mod_randint = lmer(y ~ (1 | id) + trt + time + trt*time, data = strength)
as_tibble(summary(mod_randint)$coefficients, rownames = "term") %>%
kable(digits = 2)
re_variance = as_tibble(summary(mod_randint)$varcor) %>%
rename("variance" = vcov,
"sd" = sdcor,
group = grp,
Name = var1) %>%
select(-var2)
re_variance %>%
kable(digits = 3)
mod_randint = lmer(y ~ (1 | id) + trt + time + trt*time, data = strength)
as_tibble(summary(mod_randint)$coefficients, rownames = "term") %>%
rename(p_value = "Pr(>|t|)") %>%
mutate(p_value = format.pval(p_value)) %>%
kable(digits = 2)
#2e
mod_randint = lmer(y ~ (1 | id) + trt + time + trt*time, data = strength)
as_tibble(summary(mod_randint)$coefficients, rownames = "term") %>%
rename(p_value = "Pr(>|t|)") %>%
mutate(p_value = format.pval(p_value)) %>%
kable(digits = 2)
mod_randint = lmer(y ~ (1 | id) + trt*time, data = strength)
as_tibble(summary(mod_randint)$coefficients, rownames = "term") %>%
kable(digits = 2)
re_variance = as_tibble(summary(mod_randint)$varcor) %>%
rename("variance" = vcov,
"sd" = sdcor,
group = grp,
Name = var1) %>%
select(-var2)
re_variance %>%
kable(digits = 3)
mod_randint = lmer(y ~ (1 | id) + trt*time, data = strength)
as_tibble(summary(mod_randint)$coefficients, rownames = "term") %>%
kable(digits = 2)
re_variance = as_tibble(summary(mod_randint)$varcor) %>%
rename("variance" = vcov,
"sd" = sdcor,
group = grp,
Name = var1) %>%
select(-var2)
re_variance %>%
kable(digits = 3)
mod_randint = lmer(y ~ (1 | id) + trt + time + trt*time, data = strength)
as_tibble(summary(mod_randint)$coefficients, rownames = "term") %>%
kable(digits = 2)
re_variance = as_tibble(summary(mod_randint)$varcor) %>%
rename("variance" = vcov,
"sd" = sdcor,
group = grp,
Name = var1) %>%
select(-var2)
re_variance %>%
kable(digits = 3)
#2f
library(lmerTest)
mod_randint = lmer(y ~ (1 | id) + trt + time, data = strength)
as_tibble(summary(mod_randint)$coefficients, rownames = "term") %>%
rename(p_value = "Pr(>|t|)") %>%
mutate(p_value = format.pval(p_value)) %>%
kable(digits = 2)
mod_randslope = lmer(y ~ (1 + time | id) + trt + time, data = strength)
as_tibble(summary(mod_randslope)$coefficients, rownames = "term") %>%
rename(p_value = "Pr(>|t|)") %>%
mutate(p_value = format.pval(p_value)) %>%
kable(digits = 2)
mod_randslope = lmer(y ~ (1 + time | id) + trt + time, data = strength)
mod_randint = lmer(y ~ (1 | id) + trt + time, data = strength)
ri = strength %>%
filter(!is.na(y)) %>%
mutate(residuals_randint = residuals(mod_randint)) %>%
ggplot(aes(x = time, y = residuals_randint)) +
geom_point(size = .5, alpha = .5) +
ggtitle("random intercept model")
library(ggplot2)
library(ggplot)
# Spaghetti plot for Treatment 1
ggplot(data[data$trt == 1, ], aes(x = time, y = y, group = id, color = as.factor(id))) +
geom_line() +
geom_point() +
labs(title = "Treatment 1: Increased Repetitions", x = "Time (days)", y = "Strength") +
theme_minimal() +
scale_color_viridis_d(name = "Subject ID")
mod_randslope = lmer(y ~ (1 + time | id) + trt + time, data = strength)
mod_randint = lmer(y ~ (1 | id) + trt + time, data = strength)
ri = strength %>%
filter(!is.na(y)) %>%
mutate(residuals_randint = residuals(mod_randint)) %>%
ggplot(aes(x = time, y = residuals_randint)) +
geom_point(size = .5, alpha = .5) +
ggtitle("random intercept model")
rs = strength %>%
filter(!is.na(y)) %>%
mutate(residuals_randslope = residuals(mod_randslope)) %>%
ggplot(aes(x = time, y = residuals_randslope)) +
geom_point(size = .5, alpha = .5) +
ggtitle("random slope model")
ri + rs
# Prepare data and create residual plots
ri_plot <- strength %>%
filter(!is.na(y)) %>%
mutate(residuals_randint = residuals(mod_randint)) %>%
ggplot(aes(x = time, y = residuals_randint)) +
geom_point(size = 0.5, alpha = 0.5) +
ggtitle("Residuals for Random Intercept Model")
rs_plot <- strength %>%
filter(!is.na(y)) %>%
mutate(residuals_randslope = residuals(mod_randslope)) %>%
ggplot(aes(x = time, y = residuals_randslope)) +
geom_point(size = 0.5, alpha = 0.5) +
ggtitle("Residuals for Random Slope Model")
# Combine plots side by side
ri_plot + rs_plot
library(lme4)
library(dplyr)
library(ggplot2)
library(patchwork)
# Assuming mod_randint and mod_randslope are already fitted and available
# Prepare data and create residual plots
ri_plot <- strength %>%
filter(!is.na(y)) %>%
mutate(residuals_randint = residuals(mod_randint)) %>%
ggplot(aes(x = time, y = residuals_randint)) +
geom_point(size = 0.5, alpha = 0.5) +
ggtitle("Residuals for Random Intercept Model")
rs_plot <- strength %>%
filter(!is.na(y)) %>%
mutate(residuals_randslope = residuals(mod_randslope)) %>%
ggplot(aes(x = time, y = residuals_randslope)) +
geom_point(size = 0.5, alpha = 0.5) +
ggtitle("Residuals for Random Slope Model")
# Combine plots side by side
ri_plot + rs_plot
AIC(mod_randint, mod_randslope)
# Set working path
getwd()
setwd("/Users/kaiyangqian/Documents/Courses/Biostatistic Method II/Rcode/HW8")
getwd()
data(seizure)
seizure_long = seizure %>%
mutate(id = row_number(), # data is in wide format and we don't have an id variable
trt = factor(trt, levels = 0:1, labels = c("placebo", "progabide"))) %>%
pivot_longer(
cols = y1:y4,
names_to = "time",
values_to = "num_seizures"
) %>%
mutate(time = as.numeric(str_remove(time, "y")))
library(tidyverse)
library(tidyr)
library(dplyr)
data(seizure)
seizure_long = seizure %>%
mutate(id = row_number(), # data is in wide format and we don't have an id variable
trt = factor(trt, levels = 0:1, labels = c("placebo", "progabide"))) %>%
pivot_longer(
cols = y1:y4,
names_to = "time",
values_to = "num_seizures"
) %>%
mutate(time = as.numeric(str_remove(time, "y")))
#1a
library(tidyverse)
library(tidyr)
library(dplyr)
library(geepack)
data(seizure)
data(seizure)
seizure_long = seizure %>%
mutate(id = row_number(), # data is in wide format and we don't have an id variable
trt = factor(trt, levels = 0:1, labels = c("placebo", "progabide"))) %>%
pivot_longer(
cols = y1:y4,
names_to = "time",
values_to = "num_seizures"
) %>%
mutate(time = as.numeric(str_remove(time, "y")))
length(unique(seizure_long$id)) # number of subjects
data(seizure)
seizure_long = seizure %>%
mutate(id = row_number(), # data is in wide format and we don't have an id variable
trt = factor(trt, levels = 0:1, labels = c("placebo", "progabide"))) %>%
pivot_longer(
cols = y1:y4,
names_to = "time",
values_to = "num_seizures"
) %>%
mutate(time = as.numeric(str_remove(time, "y")))
length(unique(seizure_long$id)) # number of subjects
table(seizure_long$time) # number of subjects per visit
data(seizure)
seizure_long = seizure %>%
mutate(id = row_number(), # data is in wide format and we don't have an id variable
trt = factor(trt, levels = 0:1, labels = c("placebo", "progabide"))) %>%
pivot_longer(
cols = y1:y4,
names_to = "time",
values_to = "num_seizures"
) %>%
mutate(time = as.numeric(str_remove(time, "y")))
length(unique(seizure_long$id)) # number of subjects
table(seizure_long$time) # number of subjects per visit
seizure_long %>%
ggplot(aes(time, log(num_seizures))) +
geom_line(alpha = 0.3, aes(group = id) )+
facet_wrap(~ trt) +
geom_smooth(method = "lm", se = FALSE)
seizure_long %>%
ggplot(aes(log(base), log(num_seizures))) +
geom_point() +
facet_wrap(~time, nrow = 1)
seizure_long %>%
ggplot(aes(time, log(num_seizures))) +
geom_line(alpha = 0.3, aes(group = id) )+
facet_wrap(~ trt) +
geom_smooth(method = "lm", se = FALSE)
seizure_long %>%
ggplot(aes(log(base), log(num_seizures))) +
geom_point() +
facet_wrap(~time, nrow = 1)
seizure_residuals = seizure_long %>%
group_by(time) %>%
mutate(mean_over_time = mean(log(num_seizures + 1))) %>%
ungroup() %>%
mutate(residuals = log(num_seizures + 1) - mean_over_time) %>%
select(id, time, residuals)
seizure_residuals_wide = seizure_residuals %>%
pivot_wider(names_from = time,
names_glue = paste0("time_", "{time}"),
3
values_from = residuals) %>%
#1c
seizure_residuals = seizure_long %>%
group_by(time) %>%
mutate(mean_over_time = mean(log(num_seizures + 1))) %>%
ungroup() %>%
mutate(residuals = log(num_seizures + 1) - mean_over_time) %>%
select(id, time, residuals)
seizure_residuals_wide = seizure_residuals %>%
pivot_wider(names_from = time,
names_glue = paste0("time_", "{time}"),
values_from = residuals) %>%
select(-id)
ggpairs(seizure_residuals_wide)
#1c
library(GGally)
seizure_residuals = seizure_long %>%
group_by(time) %>%
mutate(mean_over_time = mean(log(num_seizures + 1))) %>%
ungroup() %>%
mutate(residuals = log(num_seizures + 1) - mean_over_time) %>%
select(id, time, residuals)
seizure_residuals_wide = seizure_residuals %>%
pivot_wider(names_from = time,
names_glue = paste0("time_", "{time}"),
values_from = residuals) %>%
select(-id)
ggpairs(seizure_residuals_wide)
#1c
library(GGally)
seizure_residuals = seizure_long %>%
group_by(time) %>%
mutate(mean_over_time = mean(log(num_seizures + 1))) %>%
ungroup() %>%
mutate(residuals = log(num_seizures + 1) - mean_over_time) %>%
select(id, time, residuals)
seizure_residuals_wide = seizure_residuals %>%
pivot_wider(names_from = time,
names_glue = paste0("time_", "{time}"),
values_from = residuals) %>%
select(-id)
ggpairs(seizure_residuals_wide)
getwd()
setwd("/Users/kaiyangqian/Documents/Courses/Biostatistic Method II/Rcode/HW9")
load("breastcancer2.rda")
write.csv(breastcancer2, "/Users/kaiyangqian/Documents/Courses/Biostatistic Method II/Rcode/HW9/breastcancer2.csv", row.names = FALSE)
write.csv(breastcancer2.rda, "/Users/kaiyangqian/Documents/Courses/Biostatistic Method II/Rcode/HW9/breastcancer2.csv", row.names = FALSE)
write.csv(breastcancer, "/Users/kaiyangqian/Documents/Courses/Biostatistic Method II/Rcode/HW9/breastcancer2.csv", row.names = FALSE)
write.csv(breastcancer, "/Users/kaiyangqian/Documents/Courses/Biostatistic Method II/Rcode/HW9/breastcancer2.csv", row.names = FALSE)
