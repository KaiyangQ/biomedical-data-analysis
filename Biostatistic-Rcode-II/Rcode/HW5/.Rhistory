b <-sqrt(size)
b
a5 <- effect_size/(sd/sqrt(size)) - 1.96
a5
effect_size <- 1
sd <- 1.5
size <- 30
b <-sqrt(size)
b
a5 <- effect_size/(sd/sqrt(size)) - 1.96
a5
dd <- pnorm(a5)
dd
effect_size <- 1
sd <- 3/2
size <- 30
b <-sqrt(size)
b
a5 <- effect_size/(sd/sqrt(size)) - 1.96
a5
dd <- pnorm(a5)
dd
effect_size <- 1/1.5
sd <- 3/2
size <- 30
b <-sqrt(size)
b
a5 <- effect_size/(sd/sqrt(size)) - 1.96
a5
dd <- pnorm(a5)
dd
effect_size <- 0.5
sd <- 3/2
size <- 30
b <-sqrt(size)
b
a5 <- effect_size/(sd/sqrt(size)) - 1.96
a5
dd <- pnorm(a5)
dd
effect_size <- 1
sd <- 3/2
size <- 30
b <-sqrt(size)
b
a5 <- effect_size/(sd/sqrt(size)) - 1.96
a5
dd <- pnorm(a5)
dd
size <- 30
b <-sqrt(size)
b
effect_size <- 1
sd <- 1.5
size <- 30
a5 <- effect_size/(sd/sqrt(size)) - 1.96
a5
dd <- pnorm(a5)
dd
effect_size <- 2
sd <- 1.5
size <- 30
a5 <- effect_size/(sd/sqrt(size)) - 1.96
a5
dd <- pnorm(a5)
dd
effect_size <- 0.5
sd <- 1.5
size <- 30
a5 <- effect_size/(sd/sqrt(size)) - 1.96
a5
dd <- pnorm(a5)
dd
effect_size <- 1.5
sd <- 1.5
size <- 30
a5 <- effect_size/(sd/sqrt(size)) - 1.96
a5
dd <- pnorm(a5)
dd
effect_size <- 0.5
sd <- 1.5
size <- 30
a5 <- effect_size/(sd/sqrt(size)) - 1.96
a5
dd <- pnorm(a5)
dd
effect_size <- 1.5
sd <- 1.5
size <- 30
a5 <- effect_size/(sd/sqrt(size)) - 1.96
a5
dd <- pnorm(a5)
dd
effect_size <- 1
sd <- 1.5
size <- 30
a5 <- effect_size/(sd/sqrt(size)) - 1.96
a5
dd <- pnorm(a5)
dd
effect_size <- 2
sd <- 1.5
size <- 30
a5 <- effect_size/(sd/sqrt(size)) - 1.96
a5
dd <- pnorm(a5)
dd
effect_size <- 0.5
sd <- 1.5
size <- 30
a5 <- effect_size/(sd/sqrt(size)) - 1.96
a5
dd <- pnorm(a5)
dd
effect_size <- 1
sd <- 1.5
size <- 30
a5 <- effect_size/(sd/sqrt(size)) - 1.96
a5
dd <- pnorm(a5)
dd
load("/Users/kaiyangqian/Downloads/breastcancer.rda")
load("/Users/kaiyangqian/Downloads/breastcancer.rda")
write.csv(breastcancer, "/Users/kaiyangqian/Downloads/breastcancer.csv")
write.csv(breastcancer111, "/Users/kaiyangqian/Downloads/breastcancer.csv")
load("/Users/kaiyangqian/Downloads/breastcancer.rda")
write.csv(breastcancer111, "/Users/kaiyangqian/Downloads/breastcancer.csv")
ls()
data -> load("/Users/kaiyangqian/Downloads/breastcancer.rda")
getwd()
setwd("/Users/kaiyangqian/Documents/Courses/Biostatistic Method II/Rcode/HW5")
# Load the data
data <- read.csv("/Users/kaiyangqian/Documents/Courses/Biostatistic Method II/Rcode/HW4/breastcancer.csv")
data <- read.csv("/Users/kaiyangqian/Documents/Courses/Biostatistic Method II/Rcode/HW5/breastcancer.csv")
data
model <- multinom(response ~ arm + age, data = data)
library(nnet)
model <- multinom(response ~ arm + age, data = data)
summary(model)
getwd()
setwd("/Users/kaiyangqian/Documents/Courses/Biostatistic Method II/Rcode/HW5")
# Load the data
data <- read.csv("/Users/kaiyangqian/Documents/Courses/Biostatistic Method II/Rcode/HW5/breastcancer.csv")
library(nnet)
model <- multinom(response ~ arm + age, data = data)
summary(model)
# Accessing the 'arm' variable
arm_values <- data$arm
# Viewing the first few values of 'arm'
head(arm_values)
# Accessing the 'arm' variable
arm_values <- model$arm
# Viewing the first few values of 'arm'
head(arm_values)
# Assuming your model is stored in a variable called `model`
coefficients <- coef(model)
# Exponentiate the coefficients for the 'arm' variable across all response levels
odds_ratios_arm <- exp(coefficients[, "arm"])
# Printing the odds ratios for the 'arm' variable
print(odds_ratios_arm)
getwd()
setwd("/Users/kaiyangqian/Documents/Courses/Biostatistic Method II/Rcode/HW5")
# Load the data
data <- read.csv("/Users/kaiyangqian/Documents/Courses/Biostatistic Method II/Rcode/HW5/breastcancer.csv")
library(nnet)
model <- multinom(response ~ arm + age, data = data)
summary(model)
# Assuming your model is stored in a variable called `model`
coefficients <- coef(model)
# Exponentiate the coefficients for the 'arm' variable across all response levels
odds_ratios_arm <- exp(coefficients[, "arm"])
# Printing the odds ratios for the 'arm' variable
print(odds_ratios_arm)
# Load the data
data <- read.csv("/Users/kaiyangqian/Documents/Courses/Biostatistic Method II/Rcode/HW5/breastcancer.csv")
library(nnet)
data$age <- as.factor(data$age)
data$arm <- as.factor(data$arm)
model <- multinom(response ~ arm + age, data = data)
summary(model)
data$age <- as.factor(data$age)
data$arm <- as.factor(data$arm)
data$response <- as.factor(data$response)
summary(model)
getwd()
setwd("/Users/kaiyangqian/Documents/Courses/Biostatistic Method II/Rcode/HW5")
# Load the data
data <- read.csv("/Users/kaiyangqian/Documents/Courses/Biostatistic Method II/Rcode/HW5/breastcancer.csv")
library(nnet)
data$age <- as.factor(data$age)
data$arm <- as.factor(data$arm)
data$response <- as.factor(data$response)
model <- multinom(response ~ arm + age, data = data)
summary(model)
library(nnet)
data$age <- as.factor(data$age)
data$arm <- as.factor(data$arm)
data$response <- as.factor(data$response)
model <- multinom(response ~ arm + age, data = data)
summary(model)
coefficients <- coef(model)
coefficients
coefficients
coefficients_age <- coefficients[, "age"]
coefficients_age <- coefficients[, "age2"]
coefficients_age
model <- multinom(response ~ arm + age, data = data)
summary(model)
exp_coefficients_arm2 <- exp(-0.6626597)
exp_coefficients_arm3 <- exp(-0.8866734)
exp_coefficients_arm4 <- exp(-1.3551808)
exp_coefficients_arm2
exp_coefficients_arm3
exp_coefficients_arm4
# Install and load the broom package if you haven't already
if (!requireNamespace("broom", quietly = TRUE)) install.packages("broom")
library(broom)
# Fit your multinom model (assuming it's already done and stored in `model`)
# model <- multinom(response ~ arm + age, data = data)
# Use the glance or tidy function to get a tidy summary
tidy_summary <- tidy(model)
# This will give you a data frame with term, estimate, std.error, statistic, and p.value
print(tidy_summary)
tidy_summary <- tidy(model)
print(tidy_summary)
summary(model)
tidy_summary1 <- tidy(model, exp = TRUE, conf.int = TRUE)
print(tidy_summary1)
data$response <- relevel(data$response, ref = "3")
modelf <- multinom(response ~ arm + age, data = data)
summary(modelf)
tidy_summary1 <- tidy(modelf, exp = TRUE, conf.int = TRUE)
print(tidy_summary1)
#1f
data$response <- relevel(data$response, ref = "3")
modelf <- multinom(response ~ arm + age, data = data)
tidy_summary1 <- tidy(modelf, exp = TRUE, conf.int = TRUE)
print(tidy_summary1)
#1f
data$response <- relevel(data$response, ref = "3")
modelf <- multinom(response ~ arm + age, data = data)
tidy_summary1 <- tidy(modelf, exp = TRUE, conf.int = TRUE)
print(tidy_summary1)
summary(model)
#2c
if (!require(MASS)) install.packages("MASS")
library(MASS)
data$response <- factor(data$response, levels = c("CR", "PR", "SD", "PD"), ordered = TRUE)
data$arm <- as.factor(data$arm)
data$clinical_stage <- as.factor(data$clinical_stage)
# Fit the ordinal logistic regression model
model_ordinal <- polr(response ~ arm + clinical_stage, data = data, Hess=TRUE, method = "logistic")
data$response <- factor(data$response, levels = c("CR", "PR", "SD", "PD"), ordered = TRUE)
data$arm <- as.factor(data$arm)
data$clinical_stage <- as.factor(data$clinical_stage)
# Fit the ordinal logistic regression model
model_ordinal <- polr(response ~ arm + clinical_stage, data = data, Hess=TRUE, method = "logistic")
data$response <- factor(data$response, levels = c("CR", "PR", "SD", "PD"), ordered = TRUE)
data$arm <- as.factor(data$arm)
data$clinical_stage <- as.factor(data$clinical_stage)
# Fit the ordinal logistic regression model
model_ordinal <- polr(response ~ arm + clinical_stage, data = data, Hess=TRUE)
data$response <- ordered(data$response, levels = c("CR", "PR", "SD", "PD"))
data$arm <- as.factor(data$arm)
data$clinical_stage <- as.factor(data$clinical_stage)
model_ordinal <- polr(response ~ arm + clinical_stage, data = data, Hess=TRUE)
setwd("/Users/kaiyangqian/Documents/Courses/Biostatistic Method II/Rcode/HW5")
data <- read.csv("/Users/kaiyangqian/Documents/Courses/Biostatistic Method II/Rcode/HW5/breastcancer.csv")
data$response <- ordered(data$response, levels = c("CR", "PR", "SD", "PD"))
data$arm <- as.factor(data$arm)
data$clinical_stage <- as.factor(data$clinical_stage)
model_ordinal <- polr(response ~ arm + clinical_stage, data = data, Hess=TRUE)
library(MASS)
model_ordinal <- polr(response ~ arm + clinical_stage, data = data, Hess=TRUE)
data_clean <- na.omit(data)
data_clean$response <- ordered(data_clean$response, levels = c("CR", "PR", "SD", "PD"))
data_clean$arm <- as.factor(data_clean$arm)
data_clean$clinical_stage <- as.factor(data_clean$clinical_stage)
model_ordinal <- polr(response ~ arm + clinical_stage, data = data_clean, Hess=TRUE)
data$response <- ordered(data$response, levels = c("CR", "PR", "SD", "PD"))
data$arm <- as.factor(data$arm)
data$clinical_stage <- as.factor(data$clinical_stage)
model_ordinal = polr(response ~ arm + clinical_stage, data = data, Hess=TRUE)
library(MASS)
data$response <- ordered(data$response, levels = c("CR", "PR", "SD", "PD"))
data$arm <- as.factor(data$arm)
data$clinical_stage <- as.factor(data$clinical_stage)
# Fit the ordinal logistic regression model
model_ordinal <- polr(response ~ arm + clinical_stage, data = data, Hess=TRUE)
library(MASS)
data$response <- ordered(data$response, levels = c("CR", "PR", "SD", "PD"))
data$arm <- as.factor(data$arm)
data$clinical_stage <- as.factor(data$clinical_stage)
clean_data <- na.omit(data, cols = c("response", "arm", "clinical_stage"))
# Fit the ordinal logistic regression model
model_ordinal <- polr(response ~ arm + clinical_stage, data = clean_data, Hess=TRUE)
library(MASS)
data$response <- ordered(data$response, levels = c("CR", "PR", "SD", "PD"))
data$arm <- as.factor(data$arm)
data$clinical_stage <- as.factor(data$clinical_stage)
clean_data <- na.omit(data)
model_ordinal <- polr(response ~ arm + clinical_stage, data = clean_data, Hess=TRUE)
if (!require(MASS)) install.packages("MASS")
library(MASS)
library(MASS)
data$response <- ordered(data$response, levels = c("CR", "PR", "SD", "PD"))
data$arm <- factor(data$arm)
data$clinical_stage <- factor(data$clinical_stage)
model_ordinal <- polr(response ~ arm + clinical_stage, data = data, Hess=TRUE)
library(MASS)
data$response <- ordered(data$response, levels = c("CR", "PR", "SD", "PD"))
data$arm <- factor(data$arm)
data$clinical_stage <- factor(data$clinical_stage)
# Fit the ordinal logistic regression model
model_ordinal <- polr(response ~ arm + clinical_stage, data = data, Hess=TRUE)
str(data)
data$response <- ordered(data$response, levels = c("1", "2", "3", "4"))
data$arm <- factor(data$arm)
data$clinical_stage <- factor(data$clinical_stage)
str(data)
model_ordinal <- polr(response ~ arm + clinical_stage, data = data, Hess=TRUE)
data$response <- ordered(data$response, levels = c("CR", "PR", "SD", "PD"))
str(data)
library(MASS)
data$response <- factor(data$response, levels = c(1, 2, 3, 4), ordered = TRUE, labels = c("CR", "PR", "SD", "PD"))
data$arm <- factor(data$arm)
data$clinical_stage <- factor(data$clinical_stage)
str(data)
model_ordinal <- polr(response ~ arm + clinical_stage, data = data, Hess=TRUE)
data$response <- factor(data$response, levels = c("1", "2", "3", "4"), ordered = TRUE, labels = c("CR", "PR", "SD", "PD"))
data$arm <- factor(data$arm)
data$clinical_stage <- factor(data$clinical_stage)
str(data)
model12 <- polr(as.factor(response) ~ arm + clinical_stage, data = data, Hess=TRUE)
# Verify and convert data as necessary
data$response <- factor(data$response, levels = c(1, 2, 3, 4), ordered = TRUE)
data$arm <- factor(data$arm)
data$clinical_stage <- factor(data$clinical_stage)
# Fit the ordinal logistic regression model
model <- polr(response ~ arm + clinical_stage, data = data, Hess = TRUE)
setwd("/Users/kaiyangqian/Documents/Courses/Biostatistic Method II/Rcode/HW5")
data <- read.csv("/Users/kaiyangqian/Documents/Courses/Biostatistic Method II/Rcode/HW5/breastcancer.csv")
# Verify and convert data as necessary
data$response <- factor(data$response, levels = c(1, 2, 3, 4), ordered = TRUE)
data$arm <- factor(data$arm)
data$clinical_stage <- factor(data$clinical_stage)
model <- polr(response ~ arm + clinical_stage, data = data, Hess = TRUE)
library(MASS)
# Verify and convert data as necessary
data$response <- factor(data$response, levels = c(1, 2, 3, 4), ordered = TRUE)
data$arm <- factor(data$arm)
data$clinical_stage <- factor(data$clinical_stage)
# Fit the ordinal logistic regression model
model <- polr(response ~ arm + clinical_stage, data = data, Hess = TRUE)
# Display the summary of the model to get coefficients and standard errors
summary(model)
# Verify and convert data as necessary
data$response <- factor(data$response, levels = c(1, 2, 3, 4), ordered = TRUE)
data$arm <- factor(data$arm)
data$clinical_stage <- factor(data$clinical_stage)
modelc <- polr(response ~ arm + clinical_stage, data = data, Hess = TRUE)
summary(modelc)
summary(modelc)
exp(coef(model_ordinal))
exp(coef(modelc))
#2d
install.packages("VGAM")
library(VGAM)
model_vglm <- vglm(response ~ arm + clinical_stage, family=cumulative(parallel=FALSE), data=data)
summary(model_vglm)
anova(modelc, model_vglm)
anova(modelc, model_vglm, test="Chisq")
brant(modelc)
library(brant)
if (!require(brant)) install.packages("brant")
library(brant)
brant(modelc)
data$response <- factor(data$response, levels = c(1, 2, 3, 4), ordered = TRUE)
data$arm <- factor(data$arm)
data$clinical_stage <- factor(data$clinical_stage)
modelc <- polr(response ~ arm + clinical_stage, data = data, Hess = TRUE)
summary(modelc)
coef_summary <- summary(modelc)$coefficients
odds_ratios <- exp(coef_summary[,1])  # Exponentiate coefficients for ORs
odds_ratios
conf_int <- confint(model)
conf_int <- confint(model)
conf_int
p_value <- (1 - pnorm(abs(summary(model)$coefficients[, "t value"]), 0, 1)) * 2
p_value
coef_summary <- summary(modelc)$coefficients
odds_ratios <- exp(coef_summary[,1])  # Exponentiate coefficients for ORs
p_value <- (1 - pnorm(abs(summary(model)$coefficients[, "t value"]), 0, 1)) * 2
p_value
odds_ratios
# Calculating CIs
conf_int <- confint(model)
conf_int
#2e
coef_summary <- summary(modelc)$coefficients
odds_ratios <- exp(coef_summary[,1])
odds_ratios
p_value <- (1 - pnorm(abs(summary(model)$coefficients[, "t value"]), 0, 1)) * 2
p_value
conf_int <- confint(model)
conf_int
# Set working path
getwd()
setwd("/Users/kaiyangqian/Documents/Courses/Biostatistic Method II/Rcode/HW5")
# Load the data
data <- read.csv("/Users/kaiyangqian/Documents/Courses/Biostatistic Method II/Rcode/HW5/breastcancer.csv")
library(nnet)
data$age <- as.factor(data$age)
data$arm <- as.factor(data$arm)
data$response <- as.factor(data$response)
model <- multinom(response ~ arm + age, data = data)
summary(model)
exp_coefficients_arm2 <- exp(-0.6626597)
exp_coefficients_arm3 <- exp(-0.8866734)
exp_coefficients_arm4 <- exp(-1.3551808)
exp_coefficients_arm2
exp_coefficients_arm3
exp_coefficients_arm4
#1d
tidy_summary <- tidy(model)
data <- read.csv("/Users/kaiyangqian/Documents/Courses/Biostatistic Method II/Rcode/HW5/breastcancer.csv")
library(tidyverse)
# Set working path
getwd()
setwd("/Users/kaiyangqian/Documents/Courses/Biostatistic Method II/Rcode/HW5")
library(tidyverse)
# Load the data
data <- read.csv("/Users/kaiyangqian/Documents/Courses/Biostatistic Method II/Rcode/HW5/breastcancer.csv")
library(nnet)
data$age <- as.factor(data$age)
data$arm <- as.factor(data$arm)
data$response <- as.factor(data$response)
model <- multinom(response ~ arm + age, data = data)
summary(model)
exp_coefficients_arm2 <- exp(-0.6626597)
exp_coefficients_arm3 <- exp(-0.8866734)
exp_coefficients_arm4 <- exp(-1.3551808)
exp_coefficients_arm2
exp_coefficients_arm3
exp_coefficients_arm4
#1d
tidy_summary <- tidy(model)
# Set working path
getwd()
setwd("/Users/kaiyangqian/Documents/Courses/Biostatistic Method II/Rcode/HW5")
library(broom)
# Load the data
data <- read.csv("/Users/kaiyangqian/Documents/Courses/Biostatistic Method II/Rcode/HW5/breastcancer.csv")
library(nnet)
data$age <- as.factor(data$age)
data$arm <- as.factor(data$arm)
data$response <- as.factor(data$response)
model <- multinom(response ~ arm + age, data = data)
summary(model)
exp_coefficients_arm2 <- exp(-0.6626597)
exp_coefficients_arm3 <- exp(-0.8866734)
exp_coefficients_arm4 <- exp(-1.3551808)
exp_coefficients_arm2
exp_coefficients_arm3
exp_coefficients_arm4
#1d
tidy_summary <- tidy(model)
print(tidy_summary)
#1f
data$response <- relevel(data$response, ref = "3")
modelf <- multinom(response ~ arm + age, data = data)
tidy_summary1 <- tidy(modelf, exp = TRUE, conf.int = TRUE)
print(tidy_summary1)
#2c
if (!require(MASS)) install.packages("MASS")
library(MASS)
data$response <- factor(data$response, levels = c(1, 2, 3, 4), ordered = TRUE)
data$arm <- factor(data$arm)
data$clinical_stage <- factor(data$clinical_stage)
modelc <- polr(response ~ arm + clinical_stage, data = data, Hess = TRUE)
summary(modelc)
#2d
if (!require(brant)) install.packages("brant")
library(brant)
brant(modelc)
#2e
coef_summary <- summary(modelc)$coefficients
odds_ratios <- exp(coef_summary[,1])
odds_ratios
p_value <- (1 - pnorm(abs(summary(model)$coefficients[, "t value"]), 0, 1)) * 2
data$response <- relevel(data$response, ref = "3")
# Set working path
getwd()
setwd("/Users/kaiyangqian/Documents/Courses/Biostatistic Method II/Rcode/HW5")
library(broom)
library(nnet)
data$age <- as.factor(data$age)
data$arm <- as.factor(data$arm)
data$response <- as.factor(data$response)
model <- multinom(response ~ arm + age, data = data)
summary(model)
tidy_summary <- tidy(model)
print(tidy_summary)
#1f
data$response <- relevel(data$response, ref = "3")
modelf <- multinom(response ~ arm + age, data = data)
tidy_summary1 <- tidy(modelf, exp = TRUE, conf.int = TRUE)
print(tidy_summary1)
tidy_summary <- tidy(model)
print(tidy_summary)
MASS::dropterm(modelf, test = "Chisq")
